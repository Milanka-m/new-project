{"ast":null,"code":"import _curry3 from \"./internal/_curry3.js\";\n/**\r\n * Inserts the sub-list into the list, at the specified `index`. _Note that this is not\r\n * destructive_: it returns a copy of the list with the changes.\r\n * <small>No lists have been harmed in the application of this function.</small>\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.9.0\r\n * @category List\r\n * @sig Number -> [a] -> [a] -> [a]\r\n * @param {Number} index The position to insert the sub-list\r\n * @param {Array} elts The sub-list to insert into the Array\r\n * @param {Array} list The list to insert the sub-list into\r\n * @return {Array} A new Array with `elts` inserted starting at `index`.\r\n * @example\r\n *\r\n *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]\r\n */\n\nvar insertAll = /*#__PURE__*/_curry3(function insertAll(idx, elts, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  return [].concat(Array.prototype.slice.call(list, 0, idx), elts, Array.prototype.slice.call(list, idx));\n});\n\nexport default insertAll;","map":{"version":3,"sources":["D:/Lianok/dev/new-project/node_modules/ramda/es/insertAll.js"],"names":["_curry3","insertAll","idx","elts","list","length","concat","Array","prototype","slice","call"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,uBAApB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,SAAS,GACb,aACAD,OAAO,CAAC,SAASC,SAAT,CAAmBC,GAAnB,EAAwBC,IAAxB,EAA8BC,IAA9B,EAAoC;AAC1CF,EAAAA,GAAG,GAAGA,GAAG,GAAGE,IAAI,CAACC,MAAX,IAAqBH,GAAG,IAAI,CAA5B,GAAgCA,GAAhC,GAAsCE,IAAI,CAACC,MAAjD;AACA,SAAO,GAAGC,MAAH,CAAUC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BN,IAA3B,EAAiC,CAAjC,EAAoCF,GAApC,CAAV,EAAoDC,IAApD,EAA0DI,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BN,IAA3B,EAAiCF,GAAjC,CAA1D,CAAP;AACD,CAHM,CAFP;;AAOA,eAAeD,SAAf","sourcesContent":["import _curry3 from \"./internal/_curry3.js\";\r\n/**\r\n * Inserts the sub-list into the list, at the specified `index`. _Note that this is not\r\n * destructive_: it returns a copy of the list with the changes.\r\n * <small>No lists have been harmed in the application of this function.</small>\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.9.0\r\n * @category List\r\n * @sig Number -> [a] -> [a] -> [a]\r\n * @param {Number} index The position to insert the sub-list\r\n * @param {Array} elts The sub-list to insert into the Array\r\n * @param {Array} list The list to insert the sub-list into\r\n * @return {Array} A new Array with `elts` inserted starting at `index`.\r\n * @example\r\n *\r\n *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]\r\n */\r\n\r\nvar insertAll =\r\n/*#__PURE__*/\r\n_curry3(function insertAll(idx, elts, list) {\r\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\r\n  return [].concat(Array.prototype.slice.call(list, 0, idx), elts, Array.prototype.slice.call(list, idx));\r\n});\r\n\r\nexport default insertAll;"]},"metadata":{},"sourceType":"module"}