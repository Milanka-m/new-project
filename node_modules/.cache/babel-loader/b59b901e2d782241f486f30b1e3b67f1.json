{"ast":null,"code":"import _Set from \"./internal/_Set.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\r\n * Returns a new list containing only one copy of each element in the original\r\n * list, based upon the value returned by applying the supplied function to\r\n * each list element. Prefers the first item if the supplied function produces\r\n * the same value on two items. [`R.equals`](#equals) is used for comparison.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.16.0\r\n * @category List\r\n * @sig (a -> b) -> [a] -> [a]\r\n * @param {Function} fn A function used to produce a value to use during comparisons.\r\n * @param {Array} list The array to consider.\r\n * @return {Array} The list of unique items.\r\n * @example\r\n *\r\n *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\r\n */\n\nvar uniqBy = /*#__PURE__*/_curry2(function uniqBy(fn, list) {\n  var set = new _Set();\n  var result = [];\n  var idx = 0;\n  var appliedItem, item;\n\n  while (idx < list.length) {\n    item = list[idx];\n    appliedItem = fn(item);\n\n    if (set.add(appliedItem)) {\n      result.push(item);\n    }\n\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default uniqBy;","map":{"version":3,"sources":["D:/Lianok/dev/new-project/node_modules/ramda/es/uniqBy.js"],"names":["_Set","_curry2","uniqBy","fn","list","set","result","idx","appliedItem","item","length","add","push"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,oBAAjB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,MAAM,GACV,aACAD,OAAO,CAAC,SAASC,MAAT,CAAgBC,EAAhB,EAAoBC,IAApB,EAA0B;AAChC,MAAIC,GAAG,GAAG,IAAIL,IAAJ,EAAV;AACA,MAAIM,MAAM,GAAG,EAAb;AACA,MAAIC,GAAG,GAAG,CAAV;AACA,MAAIC,WAAJ,EAAiBC,IAAjB;;AAEA,SAAOF,GAAG,GAAGH,IAAI,CAACM,MAAlB,EAA0B;AACxBD,IAAAA,IAAI,GAAGL,IAAI,CAACG,GAAD,CAAX;AACAC,IAAAA,WAAW,GAAGL,EAAE,CAACM,IAAD,CAAhB;;AAEA,QAAIJ,GAAG,CAACM,GAAJ,CAAQH,WAAR,CAAJ,EAA0B;AACxBF,MAAAA,MAAM,CAACM,IAAP,CAAYH,IAAZ;AACD;;AAEDF,IAAAA,GAAG,IAAI,CAAP;AACD;;AAED,SAAOD,MAAP;AACD,CAlBM,CAFP;;AAsBA,eAAeJ,MAAf","sourcesContent":["import _Set from \"./internal/_Set.js\";\r\nimport _curry2 from \"./internal/_curry2.js\";\r\n/**\r\n * Returns a new list containing only one copy of each element in the original\r\n * list, based upon the value returned by applying the supplied function to\r\n * each list element. Prefers the first item if the supplied function produces\r\n * the same value on two items. [`R.equals`](#equals) is used for comparison.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.16.0\r\n * @category List\r\n * @sig (a -> b) -> [a] -> [a]\r\n * @param {Function} fn A function used to produce a value to use during comparisons.\r\n * @param {Array} list The array to consider.\r\n * @return {Array} The list of unique items.\r\n * @example\r\n *\r\n *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\r\n */\r\n\r\nvar uniqBy =\r\n/*#__PURE__*/\r\n_curry2(function uniqBy(fn, list) {\r\n  var set = new _Set();\r\n  var result = [];\r\n  var idx = 0;\r\n  var appliedItem, item;\r\n\r\n  while (idx < list.length) {\r\n    item = list[idx];\r\n    appliedItem = fn(item);\r\n\r\n    if (set.add(appliedItem)) {\r\n      result.push(item);\r\n    }\r\n\r\n    idx += 1;\r\n  }\r\n\r\n  return result;\r\n});\r\n\r\nexport default uniqBy;"]},"metadata":{},"sourceType":"module"}