{"ast":null,"code":"import _curry1 from \"./internal/_curry1.js\";\nimport assoc from \"./assoc.js\";\nimport lens from \"./lens.js\";\nimport prop from \"./prop.js\";\n/**\r\n * Returns a lens whose focus is the specified property.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.14.0\r\n * @category Object\r\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\r\n * @sig String -> Lens s a\r\n * @param {String} k\r\n * @return {Lens}\r\n * @see R.view, R.set, R.over\r\n * @example\r\n *\r\n *      const xLens = R.lensProp('x');\r\n *\r\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\r\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\r\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\r\n */\n\nvar lensProp = /*#__PURE__*/_curry1(function lensProp(k) {\n  return lens(prop(k), assoc(k));\n});\n\nexport default lensProp;","map":{"version":3,"sources":["D:/Lianok/dev/new-project/node_modules/ramda/es/lensProp.js"],"names":["_curry1","assoc","lens","prop","lensProp","k"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,uBAApB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,QAAQ,GACZ,aACAJ,OAAO,CAAC,SAASI,QAAT,CAAkBC,CAAlB,EAAqB;AAC3B,SAAOH,IAAI,CAACC,IAAI,CAACE,CAAD,CAAL,EAAUJ,KAAK,CAACI,CAAD,CAAf,CAAX;AACD,CAFM,CAFP;;AAMA,eAAeD,QAAf","sourcesContent":["import _curry1 from \"./internal/_curry1.js\";\r\nimport assoc from \"./assoc.js\";\r\nimport lens from \"./lens.js\";\r\nimport prop from \"./prop.js\";\r\n/**\r\n * Returns a lens whose focus is the specified property.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.14.0\r\n * @category Object\r\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\r\n * @sig String -> Lens s a\r\n * @param {String} k\r\n * @return {Lens}\r\n * @see R.view, R.set, R.over\r\n * @example\r\n *\r\n *      const xLens = R.lensProp('x');\r\n *\r\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\r\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\r\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\r\n */\r\n\r\nvar lensProp =\r\n/*#__PURE__*/\r\n_curry1(function lensProp(k) {\r\n  return lens(prop(k), assoc(k));\r\n});\r\n\r\nexport default lensProp;"]},"metadata":{},"sourceType":"module"}