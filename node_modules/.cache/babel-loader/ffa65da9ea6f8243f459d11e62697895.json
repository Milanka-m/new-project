{"ast":null,"code":"import _clone from \"./internal/_clone.js\";\nimport _curryN from \"./internal/_curryN.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _has from \"./internal/_has.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport _xreduceBy from \"./internal/_xreduceBy.js\";\n/**\r\n * Groups the elements of the list according to the result of calling\r\n * the String-returning function `keyFn` on each element and reduces the elements\r\n * of each group to a single value via the reducer function `valueFn`.\r\n *\r\n * This function is basically a more general [`groupBy`](#groupBy) function.\r\n *\r\n * Acts as a transducer if a transformer is given in list position.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.20.0\r\n * @category List\r\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\r\n * @param {Function} valueFn The function that reduces the elements of each group to a single\r\n *        value. Receives two values, accumulator for a particular group and the current element.\r\n * @param {*} acc The (initial) accumulator value for each group.\r\n * @param {Function} keyFn The function that maps the list's element into a key.\r\n * @param {Array} list The array to group.\r\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\r\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\r\n * @see R.groupBy, R.reduce\r\n * @example\r\n *\r\n *      const groupNames = (acc, {name}) => acc.concat(name)\r\n *      const toGrade = ({score}) =>\r\n *        score < 65 ? 'F' :\r\n *        score < 70 ? 'D' :\r\n *        score < 80 ? 'C' :\r\n *        score < 90 ? 'B' : 'A'\r\n *\r\n *      var students = [\r\n *        {name: 'Abby', score: 83},\r\n *        {name: 'Bart', score: 62},\r\n *        {name: 'Curt', score: 88},\r\n *        {name: 'Dora', score: 92},\r\n *      ]\r\n *\r\n *      reduceBy(groupNames, [], toGrade, students)\r\n *      //=> {\"A\": [\"Dora\"], \"B\": [\"Abby\", \"Curt\"], \"F\": [\"Bart\"]}\r\n */\n\nvar reduceBy = /*#__PURE__*/_curryN(4, [], /*#__PURE__*/_dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {\n  return _reduce(function (acc, elt) {\n    var key = keyFn(elt);\n    acc[key] = valueFn(_has(key, acc) ? acc[key] : _clone(valueAcc, [], [], false), elt);\n    return acc;\n  }, {}, list);\n}));\n\nexport default reduceBy;","map":{"version":3,"sources":["D:/Lianok/dev/new-project/node_modules/ramda/es/reduceBy.js"],"names":["_clone","_curryN","_dispatchable","_has","_reduce","_xreduceBy","reduceBy","valueFn","valueAcc","keyFn","list","acc","elt","key"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,QAAQ,GACZ,aACAL,OAAO,CAAC,CAAD,EAAI,EAAJ,EACP,aACAC,aAAa,CAAC,EAAD,EAAKG,UAAL,EAAiB,SAASC,QAAT,CAAkBC,OAAlB,EAA2BC,QAA3B,EAAqCC,KAArC,EAA4CC,IAA5C,EAAkD;AAC9E,SAAON,OAAO,CAAC,UAAUO,GAAV,EAAeC,GAAf,EAAoB;AACjC,QAAIC,GAAG,GAAGJ,KAAK,CAACG,GAAD,CAAf;AACAD,IAAAA,GAAG,CAACE,GAAD,CAAH,GAAWN,OAAO,CAACJ,IAAI,CAACU,GAAD,EAAMF,GAAN,CAAJ,GAAiBA,GAAG,CAACE,GAAD,CAApB,GAA4Bb,MAAM,CAACQ,QAAD,EAAW,EAAX,EAAe,EAAf,EAAmB,KAAnB,CAAnC,EAA8DI,GAA9D,CAAlB;AACA,WAAOD,GAAP;AACD,GAJa,EAIX,EAJW,EAIPD,IAJO,CAAd;AAKD,CANY,CAFN,CAFP;;AAYA,eAAeJ,QAAf","sourcesContent":["import _clone from \"./internal/_clone.js\";\r\nimport _curryN from \"./internal/_curryN.js\";\r\nimport _dispatchable from \"./internal/_dispatchable.js\";\r\nimport _has from \"./internal/_has.js\";\r\nimport _reduce from \"./internal/_reduce.js\";\r\nimport _xreduceBy from \"./internal/_xreduceBy.js\";\r\n/**\r\n * Groups the elements of the list according to the result of calling\r\n * the String-returning function `keyFn` on each element and reduces the elements\r\n * of each group to a single value via the reducer function `valueFn`.\r\n *\r\n * This function is basically a more general [`groupBy`](#groupBy) function.\r\n *\r\n * Acts as a transducer if a transformer is given in list position.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.20.0\r\n * @category List\r\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\r\n * @param {Function} valueFn The function that reduces the elements of each group to a single\r\n *        value. Receives two values, accumulator for a particular group and the current element.\r\n * @param {*} acc The (initial) accumulator value for each group.\r\n * @param {Function} keyFn The function that maps the list's element into a key.\r\n * @param {Array} list The array to group.\r\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\r\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\r\n * @see R.groupBy, R.reduce\r\n * @example\r\n *\r\n *      const groupNames = (acc, {name}) => acc.concat(name)\r\n *      const toGrade = ({score}) =>\r\n *        score < 65 ? 'F' :\r\n *        score < 70 ? 'D' :\r\n *        score < 80 ? 'C' :\r\n *        score < 90 ? 'B' : 'A'\r\n *\r\n *      var students = [\r\n *        {name: 'Abby', score: 83},\r\n *        {name: 'Bart', score: 62},\r\n *        {name: 'Curt', score: 88},\r\n *        {name: 'Dora', score: 92},\r\n *      ]\r\n *\r\n *      reduceBy(groupNames, [], toGrade, students)\r\n *      //=> {\"A\": [\"Dora\"], \"B\": [\"Abby\", \"Curt\"], \"F\": [\"Bart\"]}\r\n */\r\n\r\nvar reduceBy =\r\n/*#__PURE__*/\r\n_curryN(4, [],\r\n/*#__PURE__*/\r\n_dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {\r\n  return _reduce(function (acc, elt) {\r\n    var key = keyFn(elt);\r\n    acc[key] = valueFn(_has(key, acc) ? acc[key] : _clone(valueAcc, [], [], false), elt);\r\n    return acc;\r\n  }, {}, list);\r\n}));\r\n\r\nexport default reduceBy;"]},"metadata":{},"sourceType":"module"}