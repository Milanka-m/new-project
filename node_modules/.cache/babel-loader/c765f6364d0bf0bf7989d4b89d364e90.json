{"ast":null,"code":"import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xdrop from \"./internal/_xdrop.js\";\nimport slice from \"./slice.js\";\n/**\r\n * Returns all but the first `n` elements of the given list, string, or\r\n * transducer/transformer (or object with a `drop` method).\r\n *\r\n * Dispatches to the `drop` method of the second argument, if present.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.1.0\r\n * @category List\r\n * @sig Number -> [a] -> [a]\r\n * @sig Number -> String -> String\r\n * @param {Number} n\r\n * @param {*} list\r\n * @return {*} A copy of list without the first `n` elements\r\n * @see R.take, R.transduce, R.dropLast, R.dropWhile\r\n * @example\r\n *\r\n *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\r\n *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\r\n *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\r\n *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\r\n *      R.drop(3, 'ramda');               //=> 'da'\r\n */\n\nvar drop = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['drop'], _xdrop, function drop(n, xs) {\n  return slice(Math.max(0, n), Infinity, xs);\n}));\n\nexport default drop;","map":{"version":3,"sources":["D:/Lianok/dev/new-project/node_modules/ramda/es/drop.js"],"names":["_curry2","_dispatchable","_xdrop","slice","drop","n","xs","Math","max","Infinity"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,uBAApB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,IAAI,GACR,aACAJ,OAAO,EACP,aACAC,aAAa,CAAC,CAAC,MAAD,CAAD,EAAWC,MAAX,EAAmB,SAASE,IAAT,CAAcC,CAAd,EAAiBC,EAAjB,EAAqB;AACnD,SAAOH,KAAK,CAACI,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYH,CAAZ,CAAD,EAAiBI,QAAjB,EAA2BH,EAA3B,CAAZ;AACD,CAFY,CAFN,CAFP;;AAQA,eAAeF,IAAf","sourcesContent":["import _curry2 from \"./internal/_curry2.js\";\r\nimport _dispatchable from \"./internal/_dispatchable.js\";\r\nimport _xdrop from \"./internal/_xdrop.js\";\r\nimport slice from \"./slice.js\";\r\n/**\r\n * Returns all but the first `n` elements of the given list, string, or\r\n * transducer/transformer (or object with a `drop` method).\r\n *\r\n * Dispatches to the `drop` method of the second argument, if present.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.1.0\r\n * @category List\r\n * @sig Number -> [a] -> [a]\r\n * @sig Number -> String -> String\r\n * @param {Number} n\r\n * @param {*} list\r\n * @return {*} A copy of list without the first `n` elements\r\n * @see R.take, R.transduce, R.dropLast, R.dropWhile\r\n * @example\r\n *\r\n *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\r\n *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\r\n *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\r\n *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\r\n *      R.drop(3, 'ramda');               //=> 'da'\r\n */\r\n\r\nvar drop =\r\n/*#__PURE__*/\r\n_curry2(\r\n/*#__PURE__*/\r\n_dispatchable(['drop'], _xdrop, function drop(n, xs) {\r\n  return slice(Math.max(0, n), Infinity, xs);\r\n}));\r\n\r\nexport default drop;"]},"metadata":{},"sourceType":"module"}