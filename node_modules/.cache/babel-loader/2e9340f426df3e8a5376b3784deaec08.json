{"ast":null,"code":"import _taggedTemplateLiteral from \"D:\\\\Lianok\\\\dev\\\\new-project\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\taggedTemplateLiteral.js\";\n\nvar _templateObject;\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useGateway } from '../gateway/GatewayContext';\nimport { getButtonText, getIcon, isDisabled } from './IdentityButton.utils';\nvar Button = styled.button(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  width: 180px;\\n  background-color: #282c34;\\n  outline: none;\\n  border: 1px solid #434343;\\n  height: 50px;\\n  line-height: 20px;\\n  cursor: pointer;\\n  position: relative;\\n  &:disabled {\\n    opacity: 0.7;\\n    cursor: default;\\n  }\\n  &:active {\\n    top: 1px;\\n  }\\n  &:disabled:active {\\n    top: 0px;\\n  }\\n\"])));\nvar buttonTitleStyle = {\n  color: 'white',\n  fontSize: '16px',\n  paddingLeft: '20px'\n};\nvar buttonStyleLight = {\n  background: '#fff',\n  border: '1px solid #ccc'\n};\nvar buttonTitleStyleLight = {\n  color: '#666666'\n};\nexport var ButtonMode;\n\n(function (ButtonMode) {\n  ButtonMode[ButtonMode[\"LIGHT\"] = 0] = \"LIGHT\";\n  ButtonMode[ButtonMode[\"DARK\"] = 1] = \"DARK\";\n})(ButtonMode || (ButtonMode = {}));\n\nvar IdentityButton = function IdentityButton(_ref) {\n  var _ref$mode = _ref.mode,\n      mode = _ref$mode === void 0 ? ButtonMode.DARK : _ref$mode;\n\n  var _useGateway = useGateway(),\n      requestGatewayToken = _useGateway.requestGatewayToken,\n      gatewayStatus = _useGateway.gatewayStatus;\n\n  return React.createElement(Button, {\n    onClick: requestGatewayToken,\n    type: \"button\",\n    disabled: isDisabled(gatewayStatus),\n    style: mode === ButtonMode.LIGHT ? Object.assign({}, buttonStyleLight) : {}\n  }, getIcon(gatewayStatus), React.createElement(\"span\", {\n    style: mode === ButtonMode.LIGHT ? Object.assign(Object.assign({}, buttonTitleStyle), buttonTitleStyleLight) : buttonTitleStyle\n  }, getButtonText(gatewayStatus)));\n};\n\nexport default IdentityButton;","map":{"version":3,"sources":["D:/Lianok/dev/new-project/node_modules/@civic/solana-gateway-react/dist/esm/button/IdentityButton.js"],"names":["React","styled","useGateway","getButtonText","getIcon","isDisabled","Button","button","buttonTitleStyle","color","fontSize","paddingLeft","buttonStyleLight","background","border","buttonTitleStyleLight","ButtonMode","IdentityButton","mode","DARK","requestGatewayToken","gatewayStatus","createElement","onClick","type","disabled","style","LIGHT","Object","assign"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,SAASC,aAAT,EAAwBC,OAAxB,EAAiCC,UAAjC,QAAmD,wBAAnD;AACA,IAAMC,MAAM,GAAGL,MAAM,CAACM,MAAV,mYAAZ;AAoBA,IAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE,OADc;AAErBC,EAAAA,QAAQ,EAAE,MAFW;AAGrBC,EAAAA,WAAW,EAAE;AAHQ,CAAzB;AAKA,IAAMC,gBAAgB,GAAG;AACrBC,EAAAA,UAAU,EAAE,MADS;AAErBC,EAAAA,MAAM,EAAE;AAFa,CAAzB;AAIA,IAAMC,qBAAqB,GAAG;AAC1BN,EAAAA,KAAK,EAAE;AADmB,CAA9B;AAGA,OAAO,IAAIO,UAAJ;;AACP,CAAC,UAAUA,UAAV,EAAsB;AACnBA,EAAAA,UAAU,CAACA,UAAU,CAAC,OAAD,CAAV,GAAsB,CAAvB,CAAV,GAAsC,OAAtC;AACAA,EAAAA,UAAU,CAACA,UAAU,CAAC,MAAD,CAAV,GAAqB,CAAtB,CAAV,GAAqC,MAArC;AACH,CAHD,EAGGA,UAAU,KAAKA,UAAU,GAAG,EAAlB,CAHb;;AAIA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAgC;AAAA,uBAA7BC,IAA6B;AAAA,MAA7BA,IAA6B,0BAAtBF,UAAU,CAACG,IAAW;;AACnD,oBAA+CjB,UAAU,EAAzD;AAAA,MAAQkB,mBAAR,eAAQA,mBAAR;AAAA,MAA6BC,aAA7B,eAA6BA,aAA7B;;AACA,SAAQrB,KAAK,CAACsB,aAAN,CAAoBhB,MAApB,EAA4B;AAAEiB,IAAAA,OAAO,EAAEH,mBAAX;AAAgCI,IAAAA,IAAI,EAAE,QAAtC;AAAgDC,IAAAA,QAAQ,EAAEpB,UAAU,CAACgB,aAAD,CAApE;AAAqFK,IAAAA,KAAK,EAAER,IAAI,KAAKF,UAAU,CAACW,KAApB,GAA4BC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBjB,gBAAlB,CAA5B,GAAkE;AAA9J,GAA5B,EACJR,OAAO,CAACiB,aAAD,CADH,EAEJrB,KAAK,CAACsB,aAAN,CAAoB,MAApB,EAA4B;AAAEI,IAAAA,KAAK,EAAER,IAAI,KAAKF,UAAU,CAACW,KAApB,GAA4BC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBrB,gBAAlB,CAAd,EAAmDO,qBAAnD,CAA5B,GAAwGP;AAAjH,GAA5B,EAAiKL,aAAa,CAACkB,aAAD,CAA9K,CAFI,CAAR;AAGH,CALD;;AAMA,eAAeJ,cAAf","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useGateway } from '../gateway/GatewayContext';\r\nimport { getButtonText, getIcon, isDisabled } from './IdentityButton.utils';\r\nconst Button = styled.button `\r\n  width: 180px;\r\n  background-color: #282c34;\r\n  outline: none;\r\n  border: 1px solid #434343;\r\n  height: 50px;\r\n  line-height: 20px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  &:disabled {\r\n    opacity: 0.7;\r\n    cursor: default;\r\n  }\r\n  &:active {\r\n    top: 1px;\r\n  }\r\n  &:disabled:active {\r\n    top: 0px;\r\n  }\r\n`;\r\nconst buttonTitleStyle = {\r\n    color: 'white',\r\n    fontSize: '16px',\r\n    paddingLeft: '20px',\r\n};\r\nconst buttonStyleLight = {\r\n    background: '#fff',\r\n    border: '1px solid #ccc',\r\n};\r\nconst buttonTitleStyleLight = {\r\n    color: '#666666',\r\n};\r\nexport var ButtonMode;\r\n(function (ButtonMode) {\r\n    ButtonMode[ButtonMode[\"LIGHT\"] = 0] = \"LIGHT\";\r\n    ButtonMode[ButtonMode[\"DARK\"] = 1] = \"DARK\";\r\n})(ButtonMode || (ButtonMode = {}));\r\nconst IdentityButton = ({ mode = ButtonMode.DARK }) => {\r\n    const { requestGatewayToken, gatewayStatus } = useGateway();\r\n    return (React.createElement(Button, { onClick: requestGatewayToken, type: \"button\", disabled: isDisabled(gatewayStatus), style: mode === ButtonMode.LIGHT ? Object.assign({}, buttonStyleLight) : {} },\r\n        getIcon(gatewayStatus),\r\n        React.createElement(\"span\", { style: mode === ButtonMode.LIGHT ? Object.assign(Object.assign({}, buttonTitleStyle), buttonTitleStyleLight) : buttonTitleStyle }, getButtonText(gatewayStatus))));\r\n};\r\nexport default IdentityButton;\r\n"]},"metadata":{},"sourceType":"module"}