{"ast":null,"code":"import _curry2 from \"./internal/_curry2.js\";\n/**\r\n * Returns a partial copy of an object omitting the keys specified.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.1.0\r\n * @category Object\r\n * @sig [String] -> {String: *} -> {String: *}\r\n * @param {Array} names an array of String property names to omit from the new object\r\n * @param {Object} obj The object to copy from\r\n * @return {Object} A new object with properties from `names` not on it.\r\n * @see R.pick\r\n * @example\r\n *\r\n *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\r\n */\n\nvar omit = /*#__PURE__*/_curry2(function omit(names, obj) {\n  var result = {};\n  var index = {};\n  var idx = 0;\n  var len = names.length;\n\n  while (idx < len) {\n    index[names[idx]] = 1;\n    idx += 1;\n  }\n\n  for (var prop in obj) {\n    if (!index.hasOwnProperty(prop)) {\n      result[prop] = obj[prop];\n    }\n  }\n\n  return result;\n});\n\nexport default omit;","map":{"version":3,"sources":["D:/Lianok/dev/new-project/node_modules/ramda/es/omit.js"],"names":["_curry2","omit","names","obj","result","index","idx","len","length","prop","hasOwnProperty"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,uBAApB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,IAAI,GACR,aACAD,OAAO,CAAC,SAASC,IAAT,CAAcC,KAAd,EAAqBC,GAArB,EAA0B;AAChC,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,GAAG,GAAG,CAAV;AACA,MAAIC,GAAG,GAAGL,KAAK,CAACM,MAAhB;;AAEA,SAAOF,GAAG,GAAGC,GAAb,EAAkB;AAChBF,IAAAA,KAAK,CAACH,KAAK,CAACI,GAAD,CAAN,CAAL,GAAoB,CAApB;AACAA,IAAAA,GAAG,IAAI,CAAP;AACD;;AAED,OAAK,IAAIG,IAAT,IAAiBN,GAAjB,EAAsB;AACpB,QAAI,CAACE,KAAK,CAACK,cAAN,CAAqBD,IAArB,CAAL,EAAiC;AAC/BL,MAAAA,MAAM,CAACK,IAAD,CAAN,GAAeN,GAAG,CAACM,IAAD,CAAlB;AACD;AACF;;AAED,SAAOL,MAAP;AACD,CAlBM,CAFP;;AAsBA,eAAeH,IAAf","sourcesContent":["import _curry2 from \"./internal/_curry2.js\";\r\n/**\r\n * Returns a partial copy of an object omitting the keys specified.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.1.0\r\n * @category Object\r\n * @sig [String] -> {String: *} -> {String: *}\r\n * @param {Array} names an array of String property names to omit from the new object\r\n * @param {Object} obj The object to copy from\r\n * @return {Object} A new object with properties from `names` not on it.\r\n * @see R.pick\r\n * @example\r\n *\r\n *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\r\n */\r\n\r\nvar omit =\r\n/*#__PURE__*/\r\n_curry2(function omit(names, obj) {\r\n  var result = {};\r\n  var index = {};\r\n  var idx = 0;\r\n  var len = names.length;\r\n\r\n  while (idx < len) {\r\n    index[names[idx]] = 1;\r\n    idx += 1;\r\n  }\r\n\r\n  for (var prop in obj) {\r\n    if (!index.hasOwnProperty(prop)) {\r\n      result[prop] = obj[prop];\r\n    }\r\n  }\r\n\r\n  return result;\r\n});\r\n\r\nexport default omit;"]},"metadata":{},"sourceType":"module"}