{"ast":null,"code":"import _checkForMethod from \"./internal/_checkForMethod.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\r\n * Creates a new list with the separator interposed between elements.\r\n *\r\n * Dispatches to the `intersperse` method of the second argument, if present.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.14.0\r\n * @category List\r\n * @sig a -> [a] -> [a]\r\n * @param {*} separator The element to add to the list.\r\n * @param {Array} list The list to be interposed.\r\n * @return {Array} The new list.\r\n * @example\r\n *\r\n *      R.intersperse('a', ['b', 'n', 'n', 's']); //=> ['b', 'a', 'n', 'a', 'n', 'a', 's']\r\n */\n\nvar intersperse = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('intersperse', function intersperse(separator, list) {\n  var out = [];\n  var idx = 0;\n  var length = list.length;\n\n  while (idx < length) {\n    if (idx === length - 1) {\n      out.push(list[idx]);\n    } else {\n      out.push(list[idx], separator);\n    }\n\n    idx += 1;\n  }\n\n  return out;\n}));\n\nexport default intersperse;","map":{"version":3,"sources":["D:/Lianok/dev/new-project/node_modules/ramda/es/intersperse.js"],"names":["_checkForMethod","_curry2","intersperse","separator","list","out","idx","length","push"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,+BAA5B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,WAAW,GACf,aACAD,OAAO,EACP,aACAD,eAAe,CAAC,aAAD,EAAgB,SAASE,WAAT,CAAqBC,SAArB,EAAgCC,IAAhC,EAAsC;AACnE,MAAIC,GAAG,GAAG,EAAV;AACA,MAAIC,GAAG,GAAG,CAAV;AACA,MAAIC,MAAM,GAAGH,IAAI,CAACG,MAAlB;;AAEA,SAAOD,GAAG,GAAGC,MAAb,EAAqB;AACnB,QAAID,GAAG,KAAKC,MAAM,GAAG,CAArB,EAAwB;AACtBF,MAAAA,GAAG,CAACG,IAAJ,CAASJ,IAAI,CAACE,GAAD,CAAb;AACD,KAFD,MAEO;AACLD,MAAAA,GAAG,CAACG,IAAJ,CAASJ,IAAI,CAACE,GAAD,CAAb,EAAoBH,SAApB;AACD;;AAEDG,IAAAA,GAAG,IAAI,CAAP;AACD;;AAED,SAAOD,GAAP;AACD,CAhBc,CAFR,CAFP;;AAsBA,eAAeH,WAAf","sourcesContent":["import _checkForMethod from \"./internal/_checkForMethod.js\";\r\nimport _curry2 from \"./internal/_curry2.js\";\r\n/**\r\n * Creates a new list with the separator interposed between elements.\r\n *\r\n * Dispatches to the `intersperse` method of the second argument, if present.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.14.0\r\n * @category List\r\n * @sig a -> [a] -> [a]\r\n * @param {*} separator The element to add to the list.\r\n * @param {Array} list The list to be interposed.\r\n * @return {Array} The new list.\r\n * @example\r\n *\r\n *      R.intersperse('a', ['b', 'n', 'n', 's']); //=> ['b', 'a', 'n', 'a', 'n', 'a', 's']\r\n */\r\n\r\nvar intersperse =\r\n/*#__PURE__*/\r\n_curry2(\r\n/*#__PURE__*/\r\n_checkForMethod('intersperse', function intersperse(separator, list) {\r\n  var out = [];\r\n  var idx = 0;\r\n  var length = list.length;\r\n\r\n  while (idx < length) {\r\n    if (idx === length - 1) {\r\n      out.push(list[idx]);\r\n    } else {\r\n      out.push(list[idx], separator);\r\n    }\r\n\r\n    idx += 1;\r\n  }\r\n\r\n  return out;\r\n}));\r\n\r\nexport default intersperse;"]},"metadata":{},"sourceType":"module"}