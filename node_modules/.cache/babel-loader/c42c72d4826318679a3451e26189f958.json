{"ast":null,"code":"import _curry2 from \"./internal/_curry2.js\";\n/**\r\n * Returns a partial copy of an object containing only the keys that satisfy\r\n * the supplied predicate.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.8.0\r\n * @category Object\r\n * @sig ((v, k) -> Boolean) -> {k: v} -> {k: v}\r\n * @param {Function} pred A predicate to determine whether or not a key\r\n *        should be included on the output object.\r\n * @param {Object} obj The object to copy from\r\n * @return {Object} A new object with only properties that satisfy `pred`\r\n *         on it.\r\n * @see R.pick, R.filter\r\n * @example\r\n *\r\n *      const isUpperCase = (val, key) => key.toUpperCase() === key;\r\n *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\r\n */\n\nvar pickBy = /*#__PURE__*/_curry2(function pickBy(test, obj) {\n  var result = {};\n\n  for (var prop in obj) {\n    if (test(obj[prop], prop, obj)) {\n      result[prop] = obj[prop];\n    }\n  }\n\n  return result;\n});\n\nexport default pickBy;","map":{"version":3,"sources":["D:/Lianok/dev/new-project/node_modules/ramda/es/pickBy.js"],"names":["_curry2","pickBy","test","obj","result","prop"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,uBAApB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,MAAM,GACV,aACAD,OAAO,CAAC,SAASC,MAAT,CAAgBC,IAAhB,EAAsBC,GAAtB,EAA2B;AACjC,MAAIC,MAAM,GAAG,EAAb;;AAEA,OAAK,IAAIC,IAAT,IAAiBF,GAAjB,EAAsB;AACpB,QAAID,IAAI,CAACC,GAAG,CAACE,IAAD,CAAJ,EAAYA,IAAZ,EAAkBF,GAAlB,CAAR,EAAgC;AAC9BC,MAAAA,MAAM,CAACC,IAAD,CAAN,GAAeF,GAAG,CAACE,IAAD,CAAlB;AACD;AACF;;AAED,SAAOD,MAAP;AACD,CAVM,CAFP;;AAcA,eAAeH,MAAf","sourcesContent":["import _curry2 from \"./internal/_curry2.js\";\r\n/**\r\n * Returns a partial copy of an object containing only the keys that satisfy\r\n * the supplied predicate.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.8.0\r\n * @category Object\r\n * @sig ((v, k) -> Boolean) -> {k: v} -> {k: v}\r\n * @param {Function} pred A predicate to determine whether or not a key\r\n *        should be included on the output object.\r\n * @param {Object} obj The object to copy from\r\n * @return {Object} A new object with only properties that satisfy `pred`\r\n *         on it.\r\n * @see R.pick, R.filter\r\n * @example\r\n *\r\n *      const isUpperCase = (val, key) => key.toUpperCase() === key;\r\n *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\r\n */\r\n\r\nvar pickBy =\r\n/*#__PURE__*/\r\n_curry2(function pickBy(test, obj) {\r\n  var result = {};\r\n\r\n  for (var prop in obj) {\r\n    if (test(obj[prop], prop, obj)) {\r\n      result[prop] = obj[prop];\r\n    }\r\n  }\r\n\r\n  return result;\r\n});\r\n\r\nexport default pickBy;"]},"metadata":{},"sourceType":"module"}