{"ast":null,"code":"import _classCallCheck from \"D:\\\\Lianok\\\\dev\\\\new-project\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"D:\\\\Lianok\\\\dev\\\\new-project\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport _assertThisInitialized from \"D:\\\\Lianok\\\\dev\\\\new-project\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\assertThisInitialized.js\";\nimport _inherits from \"D:\\\\Lianok\\\\dev\\\\new-project\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\inherits.js\";\nimport _createSuper from \"D:\\\\Lianok\\\\dev\\\\new-project\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createSuper.js\";\nimport _regeneratorRuntime from \"D:\\\\Lianok\\\\dev\\\\new-project\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { BaseSignerWalletAdapter, pollUntilReady, WalletAccountError, WalletNotConnectedError, WalletNotFoundError, WalletPublicKeyError, WalletSignTransactionError } from '@solana/wallet-adapter-base';\nimport { PublicKey } from '@solana/web3.js';\nexport var BitpieWalletAdapter = /*#__PURE__*/function (_BaseSignerWalletAdap) {\n  _inherits(BitpieWalletAdapter, _BaseSignerWalletAdap);\n\n  var _super = _createSuper(BitpieWalletAdapter);\n\n  function BitpieWalletAdapter() {\n    var _this;\n\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, BitpieWalletAdapter);\n\n    _this = _super.call(this);\n    _this._connecting = false;\n    _this._wallet = null;\n    _this._publicKey = null;\n    if (!_this.ready) pollUntilReady(_assertThisInitialized(_this), config.pollInterval || 1000, config.pollCount || 3);\n    return _this;\n  }\n\n  _createClass(BitpieWalletAdapter, [{\n    key: \"publicKey\",\n    get: function get() {\n      return this._publicKey;\n    }\n  }, {\n    key: \"ready\",\n    get: function get() {\n      return typeof window !== 'undefined' && !!window.bitpie;\n    }\n  }, {\n    key: \"connecting\",\n    get: function get() {\n      return this._connecting;\n    }\n  }, {\n    key: \"connected\",\n    get: function get() {\n      return !!this._wallet;\n    }\n  }, {\n    key: \"connect\",\n    value: function connect() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var wallet, account, publicKey;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n\n                if (!(this.connected || this.connecting)) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 3:\n                this._connecting = true;\n                wallet = typeof window !== 'undefined' && window.bitpie;\n\n                if (wallet) {\n                  _context.next = 7;\n                  break;\n                }\n\n                throw new WalletNotFoundError();\n\n              case 7:\n                _context.prev = 7;\n                _context.next = 10;\n                return wallet.getAccount();\n\n              case 10:\n                account = _context.sent;\n                _context.next = 16;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](7);\n                throw new WalletAccountError(_context.t0 === null || _context.t0 === void 0 ? void 0 : _context.t0.message, _context.t0);\n\n              case 16:\n                _context.prev = 16;\n                publicKey = new PublicKey(account);\n                _context.next = 23;\n                break;\n\n              case 20:\n                _context.prev = 20;\n                _context.t1 = _context[\"catch\"](16);\n                throw new WalletPublicKeyError(_context.t1 === null || _context.t1 === void 0 ? void 0 : _context.t1.message, _context.t1);\n\n              case 23:\n                this._wallet = wallet;\n                this._publicKey = publicKey;\n                this.emit('connect');\n                _context.next = 32;\n                break;\n\n              case 28:\n                _context.prev = 28;\n                _context.t2 = _context[\"catch\"](0);\n                this.emit('error', _context.t2);\n                throw _context.t2;\n\n              case 32:\n                _context.prev = 32;\n                this._connecting = false;\n                return _context.finish(32);\n\n              case 35:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 28, 32, 35], [7, 13], [16, 20]]);\n      }));\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (this._wallet) {\n                  this._wallet = null;\n                  this._publicKey = null;\n                }\n\n                this.emit('disconnect');\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    }\n  }, {\n    key: \"signTransaction\",\n    value: function signTransaction(transaction) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var wallet;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                wallet = this._wallet;\n\n                if (wallet) {\n                  _context3.next = 4;\n                  break;\n                }\n\n                throw new WalletNotConnectedError();\n\n              case 4:\n                _context3.prev = 4;\n                _context3.next = 7;\n                return wallet.signTransaction(transaction);\n\n              case 7:\n                _context3.t0 = _context3.sent;\n\n                if (_context3.t0) {\n                  _context3.next = 10;\n                  break;\n                }\n\n                _context3.t0 = transaction;\n\n              case 10:\n                return _context3.abrupt(\"return\", _context3.t0);\n\n              case 13:\n                _context3.prev = 13;\n                _context3.t1 = _context3[\"catch\"](4);\n                throw new WalletSignTransactionError(_context3.t1 === null || _context3.t1 === void 0 ? void 0 : _context3.t1.message, _context3.t1);\n\n              case 16:\n                _context3.next = 22;\n                break;\n\n              case 18:\n                _context3.prev = 18;\n                _context3.t2 = _context3[\"catch\"](0);\n                this.emit('error', _context3.t2);\n                throw _context3.t2;\n\n              case 22:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 18], [4, 13]]);\n      }));\n    }\n  }, {\n    key: \"signAllTransactions\",\n    value: function signAllTransactions(transactions) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var wallet;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                wallet = this._wallet;\n\n                if (wallet) {\n                  _context4.next = 4;\n                  break;\n                }\n\n                throw new WalletNotConnectedError();\n\n              case 4:\n                _context4.prev = 4;\n                _context4.next = 7;\n                return wallet.signAllTransactions(transactions);\n\n              case 7:\n                _context4.t0 = _context4.sent;\n\n                if (_context4.t0) {\n                  _context4.next = 10;\n                  break;\n                }\n\n                _context4.t0 = transactions;\n\n              case 10:\n                return _context4.abrupt(\"return\", _context4.t0);\n\n              case 13:\n                _context4.prev = 13;\n                _context4.t1 = _context4[\"catch\"](4);\n                throw new WalletSignTransactionError(_context4.t1 === null || _context4.t1 === void 0 ? void 0 : _context4.t1.message, _context4.t1);\n\n              case 16:\n                _context4.next = 22;\n                break;\n\n              case 18:\n                _context4.prev = 18;\n                _context4.t2 = _context4[\"catch\"](0);\n                this.emit('error', _context4.t2);\n                throw _context4.t2;\n\n              case 22:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[0, 18], [4, 13]]);\n      }));\n    }\n  }]);\n\n  return BitpieWalletAdapter;\n}(BaseSignerWalletAdapter);","map":{"version":3,"sources":["../src/adapter.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { BaseSignerWalletAdapter, pollUntilReady, WalletAccountError, WalletNotConnectedError, WalletNotFoundError, WalletPublicKeyError, WalletSignTransactionError, } from '@solana/wallet-adapter-base';\r\nimport { PublicKey } from '@solana/web3.js';\r\nexport class BitpieWalletAdapter extends BaseSignerWalletAdapter {\r\n    constructor(config = {}) {\r\n        super();\r\n        this._connecting = false;\r\n        this._wallet = null;\r\n        this._publicKey = null;\r\n        if (!this.ready)\r\n            pollUntilReady(this, config.pollInterval || 1000, config.pollCount || 3);\r\n    }\r\n    get publicKey() {\r\n        return this._publicKey;\r\n    }\r\n    get ready() {\r\n        return typeof window !== 'undefined' && !!window.bitpie;\r\n    }\r\n    get connecting() {\r\n        return this._connecting;\r\n    }\r\n    get connected() {\r\n        return !!this._wallet;\r\n    }\r\n    connect() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                if (this.connected || this.connecting)\r\n                    return;\r\n                this._connecting = true;\r\n                const wallet = typeof window !== 'undefined' && window.bitpie;\r\n                if (!wallet)\r\n                    throw new WalletNotFoundError();\r\n                let account;\r\n                try {\r\n                    account = yield wallet.getAccount();\r\n                }\r\n                catch (error) {\r\n                    throw new WalletAccountError(error === null || error === void 0 ? void 0 : error.message, error);\r\n                }\r\n                let publicKey;\r\n                try {\r\n                    publicKey = new PublicKey(account);\r\n                }\r\n                catch (error) {\r\n                    throw new WalletPublicKeyError(error === null || error === void 0 ? void 0 : error.message, error);\r\n                }\r\n                this._wallet = wallet;\r\n                this._publicKey = publicKey;\r\n                this.emit('connect');\r\n            }\r\n            catch (error) {\r\n                this.emit('error', error);\r\n                throw error;\r\n            }\r\n            finally {\r\n                this._connecting = false;\r\n            }\r\n        });\r\n    }\r\n    disconnect() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this._wallet) {\r\n                this._wallet = null;\r\n                this._publicKey = null;\r\n            }\r\n            this.emit('disconnect');\r\n        });\r\n    }\r\n    signTransaction(transaction) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const wallet = this._wallet;\r\n                if (!wallet)\r\n                    throw new WalletNotConnectedError();\r\n                try {\r\n                    return (yield wallet.signTransaction(transaction)) || transaction;\r\n                }\r\n                catch (error) {\r\n                    throw new WalletSignTransactionError(error === null || error === void 0 ? void 0 : error.message, error);\r\n                }\r\n            }\r\n            catch (error) {\r\n                this.emit('error', error);\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    signAllTransactions(transactions) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const wallet = this._wallet;\r\n                if (!wallet)\r\n                    throw new WalletNotConnectedError();\r\n                try {\r\n                    return (yield wallet.signAllTransactions(transactions)) || transactions;\r\n                }\r\n                catch (error) {\r\n                    throw new WalletSignTransactionError(error === null || error === void 0 ? void 0 : error.message, error);\r\n                }\r\n            }\r\n            catch (error) {\r\n                this.emit('error', error);\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=adapter.js.map"]},"metadata":{},"sourceType":"module"}