{"ast":null,"code":"import _curry3 from \"./internal/_curry3.js\";\nimport always from \"./always.js\";\nimport over from \"./over.js\";\n/**\r\n * Returns the result of \"setting\" the portion of the given data structure\r\n * focused by the given lens to the given value.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.16.0\r\n * @category Object\r\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\r\n * @sig Lens s a -> a -> s -> s\r\n * @param {Lens} lens\r\n * @param {*} v\r\n * @param {*} x\r\n * @return {*}\r\n * @see R.prop, R.lensIndex, R.lensProp\r\n * @example\r\n *\r\n *      const xLens = R.lensProp('x');\r\n *\r\n *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\r\n *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\r\n */\n\nvar set = /*#__PURE__*/_curry3(function set(lens, v, x) {\n  return over(lens, always(v), x);\n});\n\nexport default set;","map":{"version":3,"sources":["D:/Lianok/dev/new-project/node_modules/ramda/es/set.js"],"names":["_curry3","always","over","set","lens","v","x"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,GAAG,GACP,aACAH,OAAO,CAAC,SAASG,GAAT,CAAaC,IAAb,EAAmBC,CAAnB,EAAsBC,CAAtB,EAAyB;AAC/B,SAAOJ,IAAI,CAACE,IAAD,EAAOH,MAAM,CAACI,CAAD,CAAb,EAAkBC,CAAlB,CAAX;AACD,CAFM,CAFP;;AAMA,eAAeH,GAAf","sourcesContent":["import _curry3 from \"./internal/_curry3.js\";\r\nimport always from \"./always.js\";\r\nimport over from \"./over.js\";\r\n/**\r\n * Returns the result of \"setting\" the portion of the given data structure\r\n * focused by the given lens to the given value.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.16.0\r\n * @category Object\r\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\r\n * @sig Lens s a -> a -> s -> s\r\n * @param {Lens} lens\r\n * @param {*} v\r\n * @param {*} x\r\n * @return {*}\r\n * @see R.prop, R.lensIndex, R.lensProp\r\n * @example\r\n *\r\n *      const xLens = R.lensProp('x');\r\n *\r\n *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\r\n *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\r\n */\r\n\r\nvar set =\r\n/*#__PURE__*/\r\n_curry3(function set(lens, v, x) {\r\n  return over(lens, always(v), x);\r\n});\r\n\r\nexport default set;"]},"metadata":{},"sourceType":"module"}