{"ast":null,"code":"import reduceBy from \"./reduceBy.js\";\n/**\r\n * Given a function that generates a key, turns a list of objects into an\r\n * object indexing the objects by the given key. Note that if multiple\r\n * objects generate the same value for the indexing key only the last value\r\n * will be included in the generated object.\r\n *\r\n * Acts as a transducer if a transformer is given in list position.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.19.0\r\n * @category List\r\n * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\r\n * @param {Function} fn Function :: a -> String\r\n * @param {Array} array The array of objects to index\r\n * @return {Object} An object indexing each array element by the given property.\r\n * @example\r\n *\r\n *      const list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\r\n *      R.indexBy(R.prop('id'), list);\r\n *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\r\n */\n\nvar indexBy = /*#__PURE__*/reduceBy(function (acc, elem) {\n  return elem;\n}, null);\nexport default indexBy;","map":{"version":3,"sources":["D:/Lianok/dev/new-project/node_modules/ramda/es/indexBy.js"],"names":["reduceBy","indexBy","acc","elem"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,eAArB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,OAAO,GACX,aACAD,QAAQ,CAAC,UAAUE,GAAV,EAAeC,IAAf,EAAqB;AAC5B,SAAOA,IAAP;AACD,CAFO,EAEL,IAFK,CAFR;AAKA,eAAeF,OAAf","sourcesContent":["import reduceBy from \"./reduceBy.js\";\r\n/**\r\n * Given a function that generates a key, turns a list of objects into an\r\n * object indexing the objects by the given key. Note that if multiple\r\n * objects generate the same value for the indexing key only the last value\r\n * will be included in the generated object.\r\n *\r\n * Acts as a transducer if a transformer is given in list position.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.19.0\r\n * @category List\r\n * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\r\n * @param {Function} fn Function :: a -> String\r\n * @param {Array} array The array of objects to index\r\n * @return {Object} An object indexing each array element by the given property.\r\n * @example\r\n *\r\n *      const list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\r\n *      R.indexBy(R.prop('id'), list);\r\n *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\r\n */\r\n\r\nvar indexBy =\r\n/*#__PURE__*/\r\nreduceBy(function (acc, elem) {\r\n  return elem;\r\n}, null);\r\nexport default indexBy;"]},"metadata":{},"sourceType":"module"}