{"ast":null,"code":"import _toConsumableArray from \"D:\\\\Lianok\\\\dev\\\\new-project\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\toConsumableArray.js\";\nimport _classCallCheck from \"D:\\\\Lianok\\\\dev\\\\new-project\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"D:\\\\Lianok\\\\dev\\\\new-project\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport _inherits from \"D:\\\\Lianok\\\\dev\\\\new-project\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\inherits.js\";\nimport _createSuper from \"D:\\\\Lianok\\\\dev\\\\new-project\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createSuper.js\";\nimport _regeneratorRuntime from \"D:\\\\Lianok\\\\dev\\\\new-project\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport BloctoSDK from '@blocto/sdk';\nimport { BaseWalletAdapter, WalletAccountError, WalletAdapterNetwork, WalletConnectionError, WalletDisconnectionError, WalletNotConnectedError, WalletNotFoundError, WalletPublicKeyError, WalletSendTransactionError } from '@solana/wallet-adapter-base';\nimport { PublicKey } from '@solana/web3.js';\nexport var BloctoWalletAdapter = /*#__PURE__*/function (_BaseWalletAdapter) {\n  _inherits(BloctoWalletAdapter, _BaseWalletAdapter);\n\n  var _super = _createSuper(BloctoWalletAdapter);\n\n  function BloctoWalletAdapter() {\n    var _this;\n\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, BloctoWalletAdapter);\n\n    _this = _super.call(this);\n    _this._connecting = false;\n    _this._wallet = null;\n    _this._publicKey = null;\n    _this._network = config.network || WalletAdapterNetwork.Mainnet;\n    return _this;\n  }\n\n  _createClass(BloctoWalletAdapter, [{\n    key: \"publicKey\",\n    get: function get() {\n      return this._publicKey;\n    }\n  }, {\n    key: \"ready\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"connecting\",\n    get: function get() {\n      return this._connecting;\n    }\n  }, {\n    key: \"connected\",\n    get: function get() {\n      return !!this._publicKey;\n    }\n  }, {\n    key: \"connect\",\n    value: function connect() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var wallet, account, publicKey;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n\n                if (!(this.connected || this.connecting)) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 3:\n                this._connecting = true;\n                wallet = new BloctoSDK({\n                  solana: {\n                    net: this._network\n                  }\n                }).solana;\n\n                if (wallet) {\n                  _context.next = 7;\n                  break;\n                }\n\n                throw new WalletNotFoundError();\n\n              case 7:\n                if (wallet.connected) {\n                  _context.next = 16;\n                  break;\n                }\n\n                _context.prev = 8;\n                _context.next = 11;\n                return wallet.connect();\n\n              case 11:\n                _context.next = 16;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](8);\n                throw new WalletConnectionError(_context.t0 === null || _context.t0 === void 0 ? void 0 : _context.t0.message, _context.t0);\n\n              case 16:\n                account = wallet.accounts[0];\n\n                if (account) {\n                  _context.next = 19;\n                  break;\n                }\n\n                throw new WalletAccountError();\n\n              case 19:\n                _context.prev = 19;\n                publicKey = new PublicKey(account);\n                _context.next = 26;\n                break;\n\n              case 23:\n                _context.prev = 23;\n                _context.t1 = _context[\"catch\"](19);\n                throw new WalletPublicKeyError(_context.t1 === null || _context.t1 === void 0 ? void 0 : _context.t1.message, _context.t1);\n\n              case 26:\n                this._wallet = wallet;\n                this._publicKey = publicKey;\n                this.emit('connect');\n                _context.next = 35;\n                break;\n\n              case 31:\n                _context.prev = 31;\n                _context.t2 = _context[\"catch\"](0);\n                this.emit('error', _context.t2);\n                throw _context.t2;\n\n              case 35:\n                _context.prev = 35;\n                this._connecting = false;\n                return _context.finish(35);\n\n              case 38:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 31, 35, 38], [8, 13], [19, 23]]);\n      }));\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var wallet;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                wallet = this._wallet;\n\n                if (!wallet) {\n                  _context2.next = 12;\n                  break;\n                }\n\n                this._wallet = null;\n                this._publicKey = null;\n                _context2.prev = 4;\n                _context2.next = 7;\n                return wallet.disconnect();\n\n              case 7:\n                _context2.next = 12;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](4);\n                this.emit('error', new WalletDisconnectionError(_context2.t0 === null || _context2.t0 === void 0 ? void 0 : _context2.t0.message, _context2.t0));\n\n              case 12:\n                this.emit('disconnect');\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[4, 9]]);\n      }));\n    }\n  }, {\n    key: \"sendTransaction\",\n    value: function sendTransaction(transaction, connection) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var wallet, signers, _transaction;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                wallet = this._wallet;\n\n                if (wallet) {\n                  _context3.next = 4;\n                  break;\n                }\n\n                throw new WalletNotConnectedError();\n\n              case 4:\n                _context3.prev = 4;\n                transaction.feePayer || (transaction.feePayer = this.publicKey || undefined);\n                _context3.t0 = transaction.recentBlockhash;\n\n                if (_context3.t0) {\n                  _context3.next = 11;\n                  break;\n                }\n\n                _context3.next = 10;\n                return connection.getRecentBlockhash('finalized');\n\n              case 10:\n                transaction.recentBlockhash = _context3.sent.blockhash;\n\n              case 11:\n                signers = options.signers;\n\n                if (!(signers === null || signers === void 0 ? void 0 : signers.length)) {\n                  _context3.next = 17;\n                  break;\n                }\n\n                _context3.next = 15;\n                return wallet.convertToProgramWalletTransaction(transaction);\n\n              case 15:\n                transaction = _context3.sent;\n\n                (_transaction = transaction).partialSign.apply(_transaction, _toConsumableArray(signers));\n\n              case 17:\n                _context3.next = 19;\n                return wallet.signAndSendTransaction(transaction, connection);\n\n              case 19:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 22:\n                _context3.prev = 22;\n                _context3.t1 = _context3[\"catch\"](4);\n                throw new WalletSendTransactionError(_context3.t1 === null || _context3.t1 === void 0 ? void 0 : _context3.t1.message, _context3.t1);\n\n              case 25:\n                _context3.next = 31;\n                break;\n\n              case 27:\n                _context3.prev = 27;\n                _context3.t2 = _context3[\"catch\"](0);\n                this.emit('error', _context3.t2);\n                throw _context3.t2;\n\n              case 31:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 27], [4, 22]]);\n      }));\n    }\n  }]);\n\n  return BloctoWalletAdapter;\n}(BaseWalletAdapter);","map":{"version":3,"sources":["../src/adapter.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport BloctoSDK from '@blocto/sdk';\r\nimport { BaseWalletAdapter, WalletAccountError, WalletAdapterNetwork, WalletConnectionError, WalletDisconnectionError, WalletNotConnectedError, WalletNotFoundError, WalletPublicKeyError, WalletSendTransactionError, } from '@solana/wallet-adapter-base';\r\nimport { PublicKey } from '@solana/web3.js';\r\nexport class BloctoWalletAdapter extends BaseWalletAdapter {\r\n    constructor(config = {}) {\r\n        super();\r\n        this._connecting = false;\r\n        this._wallet = null;\r\n        this._publicKey = null;\r\n        this._network = config.network || WalletAdapterNetwork.Mainnet;\r\n    }\r\n    get publicKey() {\r\n        return this._publicKey;\r\n    }\r\n    get ready() {\r\n        return true;\r\n    }\r\n    get connecting() {\r\n        return this._connecting;\r\n    }\r\n    get connected() {\r\n        return !!this._publicKey;\r\n    }\r\n    connect() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                if (this.connected || this.connecting)\r\n                    return;\r\n                this._connecting = true;\r\n                const wallet = new BloctoSDK({ solana: { net: this._network } }).solana;\r\n                if (!wallet)\r\n                    throw new WalletNotFoundError();\r\n                if (!wallet.connected) {\r\n                    try {\r\n                        yield wallet.connect();\r\n                    }\r\n                    catch (error) {\r\n                        throw new WalletConnectionError(error === null || error === void 0 ? void 0 : error.message, error);\r\n                    }\r\n                }\r\n                const account = wallet.accounts[0];\r\n                if (!account)\r\n                    throw new WalletAccountError();\r\n                let publicKey;\r\n                try {\r\n                    publicKey = new PublicKey(account);\r\n                }\r\n                catch (error) {\r\n                    throw new WalletPublicKeyError(error === null || error === void 0 ? void 0 : error.message, error);\r\n                }\r\n                this._wallet = wallet;\r\n                this._publicKey = publicKey;\r\n                this.emit('connect');\r\n            }\r\n            catch (error) {\r\n                this.emit('error', error);\r\n                throw error;\r\n            }\r\n            finally {\r\n                this._connecting = false;\r\n            }\r\n        });\r\n    }\r\n    disconnect() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const wallet = this._wallet;\r\n            if (wallet) {\r\n                this._wallet = null;\r\n                this._publicKey = null;\r\n                try {\r\n                    yield wallet.disconnect();\r\n                }\r\n                catch (error) {\r\n                    this.emit('error', new WalletDisconnectionError(error === null || error === void 0 ? void 0 : error.message, error));\r\n                }\r\n            }\r\n            this.emit('disconnect');\r\n        });\r\n    }\r\n    sendTransaction(transaction, connection, options = {}) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const wallet = this._wallet;\r\n                if (!wallet)\r\n                    throw new WalletNotConnectedError();\r\n                try {\r\n                    transaction.feePayer || (transaction.feePayer = this.publicKey || undefined);\r\n                    transaction.recentBlockhash || (transaction.recentBlockhash = (yield connection.getRecentBlockhash('finalized')).blockhash);\r\n                    const { signers } = options;\r\n                    if (signers === null || signers === void 0 ? void 0 : signers.length) {\r\n                        transaction = yield wallet.convertToProgramWalletTransaction(transaction);\r\n                        transaction.partialSign(...signers);\r\n                    }\r\n                    return yield wallet.signAndSendTransaction(transaction, connection);\r\n                }\r\n                catch (error) {\r\n                    throw new WalletSendTransactionError(error === null || error === void 0 ? void 0 : error.message, error);\r\n                }\r\n            }\r\n            catch (error) {\r\n                this.emit('error', error);\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=adapter.js.map"]},"metadata":{},"sourceType":"module"}