{"ast":null,"code":"import _curry2 from \"./internal/_curry2.js\";\nimport _isInteger from \"./internal/_isInteger.js\";\nimport _isArray from \"./internal/_isArray.js\";\nimport assoc from \"./assoc.js\";\nimport dissoc from \"./dissoc.js\";\nimport remove from \"./remove.js\";\nimport update from \"./update.js\";\n/**\r\n * Makes a shallow clone of an object, omitting the property at the given path.\r\n * Note that this copies and flattens prototype properties onto the new object\r\n * as well. All non-primitive properties are copied by reference.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.11.0\r\n * @category Object\r\n * @typedefn Idx = String | Int\r\n * @sig [Idx] -> {k: v} -> {k: v}\r\n * @param {Array} path The path to the value to omit\r\n * @param {Object} obj The object to clone\r\n * @return {Object} A new object without the property at path\r\n * @see R.assocPath\r\n * @example\r\n *\r\n *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\r\n */\n\nvar dissocPath = /*#__PURE__*/_curry2(function dissocPath(path, obj) {\n  switch (path.length) {\n    case 0:\n      return obj;\n\n    case 1:\n      return _isInteger(path[0]) && _isArray(obj) ? remove(path[0], 1, obj) : dissoc(path[0], obj);\n\n    default:\n      var head = path[0];\n      var tail = Array.prototype.slice.call(path, 1);\n\n      if (obj[head] == null) {\n        return obj;\n      } else if (_isInteger(head) && _isArray(obj)) {\n        return update(head, dissocPath(tail, obj[head]), obj);\n      } else {\n        return assoc(head, dissocPath(tail, obj[head]), obj);\n      }\n\n  }\n});\n\nexport default dissocPath;","map":{"version":3,"sources":["D:/Lianok/dev/new-project/node_modules/ramda/es/dissocPath.js"],"names":["_curry2","_isInteger","_isArray","assoc","dissoc","remove","update","dissocPath","path","obj","length","head","tail","Array","prototype","slice","call"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,uBAApB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,UAAU,GACd,aACAP,OAAO,CAAC,SAASO,UAAT,CAAoBC,IAApB,EAA0BC,GAA1B,EAA+B;AACrC,UAAQD,IAAI,CAACE,MAAb;AACE,SAAK,CAAL;AACE,aAAOD,GAAP;;AAEF,SAAK,CAAL;AACE,aAAOR,UAAU,CAACO,IAAI,CAAC,CAAD,CAAL,CAAV,IAAuBN,QAAQ,CAACO,GAAD,CAA/B,GAAuCJ,MAAM,CAACG,IAAI,CAAC,CAAD,CAAL,EAAU,CAAV,EAAaC,GAAb,CAA7C,GAAiEL,MAAM,CAACI,IAAI,CAAC,CAAD,CAAL,EAAUC,GAAV,CAA9E;;AAEF;AACE,UAAIE,IAAI,GAAGH,IAAI,CAAC,CAAD,CAAf;AACA,UAAII,IAAI,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BR,IAA3B,EAAiC,CAAjC,CAAX;;AAEA,UAAIC,GAAG,CAACE,IAAD,CAAH,IAAa,IAAjB,EAAuB;AACrB,eAAOF,GAAP;AACD,OAFD,MAEO,IAAIR,UAAU,CAACU,IAAD,CAAV,IAAoBT,QAAQ,CAACO,GAAD,CAAhC,EAAuC;AAC5C,eAAOH,MAAM,CAACK,IAAD,EAAOJ,UAAU,CAACK,IAAD,EAAOH,GAAG,CAACE,IAAD,CAAV,CAAjB,EAAoCF,GAApC,CAAb;AACD,OAFM,MAEA;AACL,eAAON,KAAK,CAACQ,IAAD,EAAOJ,UAAU,CAACK,IAAD,EAAOH,GAAG,CAACE,IAAD,CAAV,CAAjB,EAAoCF,GAApC,CAAZ;AACD;;AAjBL;AAoBD,CArBM,CAFP;;AAyBA,eAAeF,UAAf","sourcesContent":["import _curry2 from \"./internal/_curry2.js\";\r\nimport _isInteger from \"./internal/_isInteger.js\";\r\nimport _isArray from \"./internal/_isArray.js\";\r\nimport assoc from \"./assoc.js\";\r\nimport dissoc from \"./dissoc.js\";\r\nimport remove from \"./remove.js\";\r\nimport update from \"./update.js\";\r\n/**\r\n * Makes a shallow clone of an object, omitting the property at the given path.\r\n * Note that this copies and flattens prototype properties onto the new object\r\n * as well. All non-primitive properties are copied by reference.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.11.0\r\n * @category Object\r\n * @typedefn Idx = String | Int\r\n * @sig [Idx] -> {k: v} -> {k: v}\r\n * @param {Array} path The path to the value to omit\r\n * @param {Object} obj The object to clone\r\n * @return {Object} A new object without the property at path\r\n * @see R.assocPath\r\n * @example\r\n *\r\n *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\r\n */\r\n\r\nvar dissocPath =\r\n/*#__PURE__*/\r\n_curry2(function dissocPath(path, obj) {\r\n  switch (path.length) {\r\n    case 0:\r\n      return obj;\r\n\r\n    case 1:\r\n      return _isInteger(path[0]) && _isArray(obj) ? remove(path[0], 1, obj) : dissoc(path[0], obj);\r\n\r\n    default:\r\n      var head = path[0];\r\n      var tail = Array.prototype.slice.call(path, 1);\r\n\r\n      if (obj[head] == null) {\r\n        return obj;\r\n      } else if (_isInteger(head) && _isArray(obj)) {\r\n        return update(head, dissocPath(tail, obj[head]), obj);\r\n      } else {\r\n        return assoc(head, dissocPath(tail, obj[head]), obj);\r\n      }\r\n\r\n  }\r\n});\r\n\r\nexport default dissocPath;"]},"metadata":{},"sourceType":"module"}