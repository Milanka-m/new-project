{"ast":null,"code":"import _curry2 from \"./internal/_curry2.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport keys from \"./keys.js\";\n/**\r\n * An Object-specific version of [`map`](#map). The function is applied to three\r\n * arguments: *(value, key, obj)*. If only the value is significant, use\r\n * [`map`](#map) instead.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.9.0\r\n * @category Object\r\n * @sig ((*, String, Object) -> *) -> Object -> Object\r\n * @param {Function} fn\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @see R.map\r\n * @example\r\n *\r\n *      const xyz = { x: 1, y: 2, z: 3 };\r\n *      const prependKeyAndDouble = (num, key, obj) => key + (num * 2);\r\n *\r\n *      R.mapObjIndexed(prependKeyAndDouble, xyz); //=> { x: 'x2', y: 'y4', z: 'z6' }\r\n */\n\nvar mapObjIndexed = /*#__PURE__*/_curry2(function mapObjIndexed(fn, obj) {\n  return _reduce(function (acc, key) {\n    acc[key] = fn(obj[key], key, obj);\n    return acc;\n  }, {}, keys(obj));\n});\n\nexport default mapObjIndexed;","map":{"version":3,"sources":["D:/Lianok/dev/new-project/node_modules/ramda/es/mapObjIndexed.js"],"names":["_curry2","_reduce","keys","mapObjIndexed","fn","obj","acc","key"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,uBAApB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,aAAa,GACjB,aACAH,OAAO,CAAC,SAASG,aAAT,CAAuBC,EAAvB,EAA2BC,GAA3B,EAAgC;AACtC,SAAOJ,OAAO,CAAC,UAAUK,GAAV,EAAeC,GAAf,EAAoB;AACjCD,IAAAA,GAAG,CAACC,GAAD,CAAH,GAAWH,EAAE,CAACC,GAAG,CAACE,GAAD,CAAJ,EAAWA,GAAX,EAAgBF,GAAhB,CAAb;AACA,WAAOC,GAAP;AACD,GAHa,EAGX,EAHW,EAGPJ,IAAI,CAACG,GAAD,CAHG,CAAd;AAID,CALM,CAFP;;AASA,eAAeF,aAAf","sourcesContent":["import _curry2 from \"./internal/_curry2.js\";\r\nimport _reduce from \"./internal/_reduce.js\";\r\nimport keys from \"./keys.js\";\r\n/**\r\n * An Object-specific version of [`map`](#map). The function is applied to three\r\n * arguments: *(value, key, obj)*. If only the value is significant, use\r\n * [`map`](#map) instead.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.9.0\r\n * @category Object\r\n * @sig ((*, String, Object) -> *) -> Object -> Object\r\n * @param {Function} fn\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @see R.map\r\n * @example\r\n *\r\n *      const xyz = { x: 1, y: 2, z: 3 };\r\n *      const prependKeyAndDouble = (num, key, obj) => key + (num * 2);\r\n *\r\n *      R.mapObjIndexed(prependKeyAndDouble, xyz); //=> { x: 'x2', y: 'y4', z: 'z6' }\r\n */\r\n\r\nvar mapObjIndexed =\r\n/*#__PURE__*/\r\n_curry2(function mapObjIndexed(fn, obj) {\r\n  return _reduce(function (acc, key) {\r\n    acc[key] = fn(obj[key], key, obj);\r\n    return acc;\r\n  }, {}, keys(obj));\r\n});\r\n\r\nexport default mapObjIndexed;"]},"metadata":{},"sourceType":"module"}