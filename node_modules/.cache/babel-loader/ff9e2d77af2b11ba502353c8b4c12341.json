{"ast":null,"code":"import _curry2 from \"./internal/_curry2.js\";\n/**\r\n * Exclusive disjunction logical operation.\r\n * Returns `true` if one of the arguments is truthy and the other is falsy.\r\n * Otherwise, it returns `false`.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.27.1\r\n * @category Logic\r\n * @sig a -> b -> Boolean\r\n * @param {Any} a\r\n * @param {Any} b\r\n * @return {Boolean} true if one of the arguments is truthy and the other is falsy\r\n * @see R.or, R.and\r\n * @example\r\n *\r\n *      R.xor(true, true); //=> false\r\n *      R.xor(true, false); //=> true\r\n *      R.xor(false, true); //=> true\r\n *      R.xor(false, false); //=> false\r\n */\n\nvar xor = /*#__PURE__*/_curry2(function xor(a, b) {\n  return Boolean(!a ^ !b);\n});\n\nexport default xor;","map":{"version":3,"sources":["D:/Lianok/dev/new-project/node_modules/ramda/es/xor.js"],"names":["_curry2","xor","a","b","Boolean"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,uBAApB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,GAAG,GACP,aACAD,OAAO,CAAC,SAASC,GAAT,CAAaC,CAAb,EAAgBC,CAAhB,EAAmB;AACzB,SAAOC,OAAO,CAAC,CAACF,CAAD,GAAK,CAACC,CAAP,CAAd;AACD,CAFM,CAFP;;AAMA,eAAeF,GAAf","sourcesContent":["import _curry2 from \"./internal/_curry2.js\";\r\n/**\r\n * Exclusive disjunction logical operation.\r\n * Returns `true` if one of the arguments is truthy and the other is falsy.\r\n * Otherwise, it returns `false`.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.27.1\r\n * @category Logic\r\n * @sig a -> b -> Boolean\r\n * @param {Any} a\r\n * @param {Any} b\r\n * @return {Boolean} true if one of the arguments is truthy and the other is falsy\r\n * @see R.or, R.and\r\n * @example\r\n *\r\n *      R.xor(true, true); //=> false\r\n *      R.xor(true, false); //=> true\r\n *      R.xor(false, true); //=> true\r\n *      R.xor(false, false); //=> false\r\n */\r\n\r\nvar xor =\r\n/*#__PURE__*/\r\n_curry2(function xor(a, b) {\r\n  return Boolean(!a ^ !b);\r\n});\r\n\r\nexport default xor;"]},"metadata":{},"sourceType":"module"}