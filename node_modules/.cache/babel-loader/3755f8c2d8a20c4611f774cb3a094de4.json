{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\Lianok\\\\dev\\\\new-project\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nexport function poll(callback, interval, count) {\n  var _this = this;\n\n  if (count > 0) {\n    setTimeout(function () {\n      return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var done;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return callback();\n\n              case 2:\n                done = _context.sent;\n                if (!done) poll(callback, interval, count - 1);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n    }, interval);\n  }\n}\nexport function pollUntilReady(adapter, pollInterval, pollCount) {\n  poll(function () {\n    var ready = adapter.ready;\n\n    if (ready) {\n      if (!adapter.emit('ready')) {\n        console.warn(\"\".concat(adapter.constructor.name, \" is ready but no listener was registered\"));\n      }\n    }\n\n    return ready;\n  }, pollInterval, pollCount);\n}","map":{"version":3,"sources":["../src/poll.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,OAAM,SAAU,IAAV,CAAe,QAAf,EAA2D,QAA3D,EAA6E,KAA7E,EAA0F;AAAA;;AAC5F,MAAI,KAAK,GAAG,CAAZ,EAAe;AACX,IAAA,UAAU,CAAC;AAAA,aAAW,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,wCAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,uBAAM,QAAQ,EAAd;;AADK;AACZ,gBAAA,IADY;AAElB,oBAAI,CAAC,IAAL,EAAW,IAAI,CAAC,QAAD,EAAW,QAAX,EAAqB,KAAK,GAAG,CAA7B,CAAJ;;AAFO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA,EAAX;AAAA,KAAD,EAGP,QAHO,CAAV;AAIH;AACJ;AAED,OAAM,SAAU,cAAV,CAAyB,OAAzB,EAAiD,YAAjD,EAAuE,SAAvE,EAAwF;AAC1F,EAAA,IAAI,CACA,YAAK;AACD,QAAQ,KAAR,GAAkB,OAAlB,CAAQ,KAAR;;AACA,QAAI,KAAJ,EAAW;AACP,UAAI,CAAC,OAAO,CAAC,IAAR,CAAa,OAAb,CAAL,EAA4B;AACxB,QAAA,OAAO,CAAC,IAAR,WAAgB,OAAO,CAAC,WAAR,CAAoB,IAApC;AACH;AACJ;;AACD,WAAO,KAAP;AACH,GATD,EAUA,YAVA,EAWA,SAXA,CAAJ;AAaH","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nexport function poll(callback, interval, count) {\r\n    if (count > 0) {\r\n        setTimeout(() => __awaiter(this, void 0, void 0, function* () {\r\n            const done = yield callback();\r\n            if (!done)\r\n                poll(callback, interval, count - 1);\r\n        }), interval);\r\n    }\r\n}\r\nexport function pollUntilReady(adapter, pollInterval, pollCount) {\r\n    poll(() => {\r\n        const { ready } = adapter;\r\n        if (ready) {\r\n            if (!adapter.emit('ready')) {\r\n                console.warn(`${adapter.constructor.name} is ready but no listener was registered`);\r\n            }\r\n        }\r\n        return ready;\r\n    }, pollInterval, pollCount);\r\n}\r\n//# sourceMappingURL=poll.js.map"]},"metadata":{},"sourceType":"module"}