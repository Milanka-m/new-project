{"ast":null,"code":"import _curry1 from \"./internal/_curry1.js\";\nimport _has from \"./internal/_has.js\";\n/**\r\n * Converts an object into an array of key, value arrays. Only the object's\r\n * own properties are used.\r\n * Note that the order of the output array is not guaranteed to be consistent\r\n * across different JS platforms.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.4.0\r\n * @category Object\r\n * @sig {String: *} -> [[String,*]]\r\n * @param {Object} obj The object to extract from\r\n * @return {Array} An array of key, value arrays from the object's own properties.\r\n * @see R.fromPairs\r\n * @example\r\n *\r\n *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\r\n */\n\nvar toPairs = /*#__PURE__*/_curry1(function toPairs(obj) {\n  var pairs = [];\n\n  for (var prop in obj) {\n    if (_has(prop, obj)) {\n      pairs[pairs.length] = [prop, obj[prop]];\n    }\n  }\n\n  return pairs;\n});\n\nexport default toPairs;","map":{"version":3,"sources":["D:/Lianok/dev/new-project/node_modules/ramda/es/toPairs.js"],"names":["_curry1","_has","toPairs","obj","pairs","prop","length"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,uBAApB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,OAAO,GACX,aACAF,OAAO,CAAC,SAASE,OAAT,CAAiBC,GAAjB,EAAsB;AAC5B,MAAIC,KAAK,GAAG,EAAZ;;AAEA,OAAK,IAAIC,IAAT,IAAiBF,GAAjB,EAAsB;AACpB,QAAIF,IAAI,CAACI,IAAD,EAAOF,GAAP,CAAR,EAAqB;AACnBC,MAAAA,KAAK,CAACA,KAAK,CAACE,MAAP,CAAL,GAAsB,CAACD,IAAD,EAAOF,GAAG,CAACE,IAAD,CAAV,CAAtB;AACD;AACF;;AAED,SAAOD,KAAP;AACD,CAVM,CAFP;;AAcA,eAAeF,OAAf","sourcesContent":["import _curry1 from \"./internal/_curry1.js\";\r\nimport _has from \"./internal/_has.js\";\r\n/**\r\n * Converts an object into an array of key, value arrays. Only the object's\r\n * own properties are used.\r\n * Note that the order of the output array is not guaranteed to be consistent\r\n * across different JS platforms.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.4.0\r\n * @category Object\r\n * @sig {String: *} -> [[String,*]]\r\n * @param {Object} obj The object to extract from\r\n * @return {Array} An array of key, value arrays from the object's own properties.\r\n * @see R.fromPairs\r\n * @example\r\n *\r\n *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\r\n */\r\n\r\nvar toPairs =\r\n/*#__PURE__*/\r\n_curry1(function toPairs(obj) {\r\n  var pairs = [];\r\n\r\n  for (var prop in obj) {\r\n    if (_has(prop, obj)) {\r\n      pairs[pairs.length] = [prop, obj[prop]];\r\n    }\r\n  }\r\n\r\n  return pairs;\r\n});\r\n\r\nexport default toPairs;"]},"metadata":{},"sourceType":"module"}