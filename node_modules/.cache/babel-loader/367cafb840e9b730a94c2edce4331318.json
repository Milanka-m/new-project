{"ast":null,"code":"import _curry1 from \"./internal/_curry1.js\";\n/**\r\n * A function that returns the `!` of its argument. It will return `true` when\r\n * passed false-y value, and `false` when passed a truth-y one.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.1.0\r\n * @category Logic\r\n * @sig * -> Boolean\r\n * @param {*} a any value\r\n * @return {Boolean} the logical inverse of passed argument.\r\n * @see R.complement\r\n * @example\r\n *\r\n *      R.not(true); //=> false\r\n *      R.not(false); //=> true\r\n *      R.not(0); //=> true\r\n *      R.not(1); //=> false\r\n */\n\nvar not = /*#__PURE__*/_curry1(function not(a) {\n  return !a;\n});\n\nexport default not;","map":{"version":3,"sources":["D:/Lianok/dev/new-project/node_modules/ramda/es/not.js"],"names":["_curry1","not","a"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,uBAApB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,GAAG,GACP,aACAD,OAAO,CAAC,SAASC,GAAT,CAAaC,CAAb,EAAgB;AACtB,SAAO,CAACA,CAAR;AACD,CAFM,CAFP;;AAMA,eAAeD,GAAf","sourcesContent":["import _curry1 from \"./internal/_curry1.js\";\r\n/**\r\n * A function that returns the `!` of its argument. It will return `true` when\r\n * passed false-y value, and `false` when passed a truth-y one.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.1.0\r\n * @category Logic\r\n * @sig * -> Boolean\r\n * @param {*} a any value\r\n * @return {Boolean} the logical inverse of passed argument.\r\n * @see R.complement\r\n * @example\r\n *\r\n *      R.not(true); //=> false\r\n *      R.not(false); //=> true\r\n *      R.not(0); //=> true\r\n *      R.not(1); //=> false\r\n */\r\n\r\nvar not =\r\n/*#__PURE__*/\r\n_curry1(function not(a) {\r\n  return !a;\r\n});\r\n\r\nexport default not;"]},"metadata":{},"sourceType":"module"}