{"ast":null,"code":"import _curry1 from \"./internal/_curry1.js\";\nimport liftN from \"./liftN.js\";\n/**\r\n * \"lifts\" a function of arity > 1 so that it may \"map over\" a list, Function or other\r\n * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.7.0\r\n * @category Function\r\n * @sig (*... -> *) -> ([*]... -> [*])\r\n * @param {Function} fn The function to lift into higher context\r\n * @return {Function} The lifted function.\r\n * @see R.liftN\r\n * @example\r\n *\r\n *      const madd3 = R.lift((a, b, c) => a + b + c);\r\n *\r\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\r\n *\r\n *      const madd5 = R.lift((a, b, c, d, e) => a + b + c + d + e);\r\n *\r\n *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\r\n */\n\nvar lift = /*#__PURE__*/_curry1(function lift(fn) {\n  return liftN(fn.length, fn);\n});\n\nexport default lift;","map":{"version":3,"sources":["D:/Lianok/dev/new-project/node_modules/ramda/es/lift.js"],"names":["_curry1","liftN","lift","fn","length"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,uBAApB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,IAAI,GACR,aACAF,OAAO,CAAC,SAASE,IAAT,CAAcC,EAAd,EAAkB;AACxB,SAAOF,KAAK,CAACE,EAAE,CAACC,MAAJ,EAAYD,EAAZ,CAAZ;AACD,CAFM,CAFP;;AAMA,eAAeD,IAAf","sourcesContent":["import _curry1 from \"./internal/_curry1.js\";\r\nimport liftN from \"./liftN.js\";\r\n/**\r\n * \"lifts\" a function of arity > 1 so that it may \"map over\" a list, Function or other\r\n * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.7.0\r\n * @category Function\r\n * @sig (*... -> *) -> ([*]... -> [*])\r\n * @param {Function} fn The function to lift into higher context\r\n * @return {Function} The lifted function.\r\n * @see R.liftN\r\n * @example\r\n *\r\n *      const madd3 = R.lift((a, b, c) => a + b + c);\r\n *\r\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\r\n *\r\n *      const madd5 = R.lift((a, b, c, d, e) => a + b + c + d + e);\r\n *\r\n *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\r\n */\r\n\r\nvar lift =\r\n/*#__PURE__*/\r\n_curry1(function lift(fn) {\r\n  return liftN(fn.length, fn);\r\n});\r\n\r\nexport default lift;"]},"metadata":{},"sourceType":"module"}