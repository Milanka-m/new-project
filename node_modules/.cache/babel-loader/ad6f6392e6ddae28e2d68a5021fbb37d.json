{"ast":null,"code":"import _curry2 from \"./internal/_curry2.js\";\nimport _isNumber from \"./internal/_isNumber.js\";\n/**\r\n * Returns a list of numbers from `from` (inclusive) to `to` (exclusive).\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.1.0\r\n * @category List\r\n * @sig Number -> Number -> [Number]\r\n * @param {Number} from The first number in the list.\r\n * @param {Number} to One more than the last number in the list.\r\n * @return {Array} The list of numbers in the set `[a, b)`.\r\n * @example\r\n *\r\n *      R.range(1, 5);    //=> [1, 2, 3, 4]\r\n *      R.range(50, 53);  //=> [50, 51, 52]\r\n */\n\nvar range = /*#__PURE__*/_curry2(function range(from, to) {\n  if (!(_isNumber(from) && _isNumber(to))) {\n    throw new TypeError('Both arguments to range must be numbers');\n  }\n\n  var result = [];\n  var n = from;\n\n  while (n < to) {\n    result.push(n);\n    n += 1;\n  }\n\n  return result;\n});\n\nexport default range;","map":{"version":3,"sources":["D:/Lianok/dev/new-project/node_modules/ramda/es/range.js"],"names":["_curry2","_isNumber","range","from","to","TypeError","result","n","push"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,uBAApB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,KAAK,GACT,aACAF,OAAO,CAAC,SAASE,KAAT,CAAeC,IAAf,EAAqBC,EAArB,EAAyB;AAC/B,MAAI,EAAEH,SAAS,CAACE,IAAD,CAAT,IAAmBF,SAAS,CAACG,EAAD,CAA9B,CAAJ,EAAyC;AACvC,UAAM,IAAIC,SAAJ,CAAc,yCAAd,CAAN;AACD;;AAED,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,CAAC,GAAGJ,IAAR;;AAEA,SAAOI,CAAC,GAAGH,EAAX,EAAe;AACbE,IAAAA,MAAM,CAACE,IAAP,CAAYD,CAAZ;AACAA,IAAAA,CAAC,IAAI,CAAL;AACD;;AAED,SAAOD,MAAP;AACD,CAdM,CAFP;;AAkBA,eAAeJ,KAAf","sourcesContent":["import _curry2 from \"./internal/_curry2.js\";\r\nimport _isNumber from \"./internal/_isNumber.js\";\r\n/**\r\n * Returns a list of numbers from `from` (inclusive) to `to` (exclusive).\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.1.0\r\n * @category List\r\n * @sig Number -> Number -> [Number]\r\n * @param {Number} from The first number in the list.\r\n * @param {Number} to One more than the last number in the list.\r\n * @return {Array} The list of numbers in the set `[a, b)`.\r\n * @example\r\n *\r\n *      R.range(1, 5);    //=> [1, 2, 3, 4]\r\n *      R.range(50, 53);  //=> [50, 51, 52]\r\n */\r\n\r\nvar range =\r\n/*#__PURE__*/\r\n_curry2(function range(from, to) {\r\n  if (!(_isNumber(from) && _isNumber(to))) {\r\n    throw new TypeError('Both arguments to range must be numbers');\r\n  }\r\n\r\n  var result = [];\r\n  var n = from;\r\n\r\n  while (n < to) {\r\n    result.push(n);\r\n    n += 1;\r\n  }\r\n\r\n  return result;\r\n});\r\n\r\nexport default range;"]},"metadata":{},"sourceType":"module"}