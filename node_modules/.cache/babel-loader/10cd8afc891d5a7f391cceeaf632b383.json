{"ast":null,"code":"import _complement from \"./internal/_complement.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport all from \"./all.js\";\n/**\r\n * Returns `true` if no elements of the list match the predicate, `false`\r\n * otherwise.\r\n *\r\n * Dispatches to the `all` method of the second argument, if present.\r\n *\r\n * Acts as a transducer if a transformer is given in list position.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.12.0\r\n * @category List\r\n * @sig (a -> Boolean) -> [a] -> Boolean\r\n * @param {Function} fn The predicate function.\r\n * @param {Array} list The array to consider.\r\n * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\r\n * @see R.all, R.any\r\n * @example\r\n *\r\n *      const isEven = n => n % 2 === 0;\r\n *      const isOdd = n => n % 2 === 1;\r\n *\r\n *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true\r\n *      R.none(isOdd, [1, 3, 5, 7, 8, 11]); //=> false\r\n */\n\nvar none = /*#__PURE__*/_curry2(function none(fn, input) {\n  return all(_complement(fn), input);\n});\n\nexport default none;","map":{"version":3,"sources":["D:/Lianok/dev/new-project/node_modules/ramda/es/none.js"],"names":["_complement","_curry2","all","none","fn","input"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,2BAAxB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,IAAI,GACR,aACAF,OAAO,CAAC,SAASE,IAAT,CAAcC,EAAd,EAAkBC,KAAlB,EAAyB;AAC/B,SAAOH,GAAG,CAACF,WAAW,CAACI,EAAD,CAAZ,EAAkBC,KAAlB,CAAV;AACD,CAFM,CAFP;;AAMA,eAAeF,IAAf","sourcesContent":["import _complement from \"./internal/_complement.js\";\r\nimport _curry2 from \"./internal/_curry2.js\";\r\nimport all from \"./all.js\";\r\n/**\r\n * Returns `true` if no elements of the list match the predicate, `false`\r\n * otherwise.\r\n *\r\n * Dispatches to the `all` method of the second argument, if present.\r\n *\r\n * Acts as a transducer if a transformer is given in list position.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.12.0\r\n * @category List\r\n * @sig (a -> Boolean) -> [a] -> Boolean\r\n * @param {Function} fn The predicate function.\r\n * @param {Array} list The array to consider.\r\n * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\r\n * @see R.all, R.any\r\n * @example\r\n *\r\n *      const isEven = n => n % 2 === 0;\r\n *      const isOdd = n => n % 2 === 1;\r\n *\r\n *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true\r\n *      R.none(isOdd, [1, 3, 5, 7, 8, 11]); //=> false\r\n */\r\n\r\nvar none =\r\n/*#__PURE__*/\r\n_curry2(function none(fn, input) {\r\n  return all(_complement(fn), input);\r\n});\r\n\r\nexport default none;"]},"metadata":{},"sourceType":"module"}