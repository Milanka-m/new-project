{"ast":null,"code":"import lift from \"./lift.js\";\nimport not from \"./not.js\";\n/**\r\n * Takes a function `f` and returns a function `g` such that if called with the same arguments\r\n * when `f` returns a \"truthy\" value, `g` returns `false` and when `f` returns a \"falsy\" value `g` returns `true`.\r\n *\r\n * `R.complement` may be applied to any functor\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.12.0\r\n * @category Logic\r\n * @sig (*... -> *) -> (*... -> Boolean)\r\n * @param {Function} f\r\n * @return {Function}\r\n * @see R.not\r\n * @example\r\n *\r\n *      const isNotNil = R.complement(R.isNil);\r\n *      isNil(null); //=> true\r\n *      isNotNil(null); //=> false\r\n *      isNil(7); //=> false\r\n *      isNotNil(7); //=> true\r\n */\n\nvar complement = /*#__PURE__*/lift(not);\nexport default complement;","map":{"version":3,"sources":["D:/Lianok/dev/new-project/node_modules/ramda/es/complement.js"],"names":["lift","not","complement"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,UAAU,GACd,aACAF,IAAI,CAACC,GAAD,CAFJ;AAGA,eAAeC,UAAf","sourcesContent":["import lift from \"./lift.js\";\r\nimport not from \"./not.js\";\r\n/**\r\n * Takes a function `f` and returns a function `g` such that if called with the same arguments\r\n * when `f` returns a \"truthy\" value, `g` returns `false` and when `f` returns a \"falsy\" value `g` returns `true`.\r\n *\r\n * `R.complement` may be applied to any functor\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.12.0\r\n * @category Logic\r\n * @sig (*... -> *) -> (*... -> Boolean)\r\n * @param {Function} f\r\n * @return {Function}\r\n * @see R.not\r\n * @example\r\n *\r\n *      const isNotNil = R.complement(R.isNil);\r\n *      isNil(null); //=> true\r\n *      isNotNil(null); //=> false\r\n *      isNil(7); //=> false\r\n *      isNotNil(7); //=> true\r\n */\r\n\r\nvar complement =\r\n/*#__PURE__*/\r\nlift(not);\r\nexport default complement;"]},"metadata":{},"sourceType":"module"}