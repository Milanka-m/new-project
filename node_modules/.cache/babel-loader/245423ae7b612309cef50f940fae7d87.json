{"ast":null,"code":"import _curry3 from \"./internal/_curry3.js\";\n/**\r\n * Removes the sub-list of `list` starting at index `start` and containing\r\n * `count` elements. _Note that this is not destructive_: it returns a copy of\r\n * the list with the changes.\r\n * <small>No lists have been harmed in the application of this function.</small>\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.2.2\r\n * @category List\r\n * @sig Number -> Number -> [a] -> [a]\r\n * @param {Number} start The position to start removing elements\r\n * @param {Number} count The number of elements to remove\r\n * @param {Array} list The list to remove from\r\n * @return {Array} A new Array with `count` elements from `start` removed.\r\n * @see R.without\r\n * @example\r\n *\r\n *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\r\n */\n\nvar remove = /*#__PURE__*/_curry3(function remove(start, count, list) {\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(start, count);\n  return result;\n});\n\nexport default remove;","map":{"version":3,"sources":["D:/Lianok/dev/new-project/node_modules/ramda/es/remove.js"],"names":["_curry3","remove","start","count","list","result","Array","prototype","slice","call","splice"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,uBAApB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,MAAM,GACV,aACAD,OAAO,CAAC,SAASC,MAAT,CAAgBC,KAAhB,EAAuBC,KAAvB,EAA8BC,IAA9B,EAAoC;AAC1C,MAAIC,MAAM,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BL,IAA3B,EAAiC,CAAjC,CAAb;AACAC,EAAAA,MAAM,CAACK,MAAP,CAAcR,KAAd,EAAqBC,KAArB;AACA,SAAOE,MAAP;AACD,CAJM,CAFP;;AAQA,eAAeJ,MAAf","sourcesContent":["import _curry3 from \"./internal/_curry3.js\";\r\n/**\r\n * Removes the sub-list of `list` starting at index `start` and containing\r\n * `count` elements. _Note that this is not destructive_: it returns a copy of\r\n * the list with the changes.\r\n * <small>No lists have been harmed in the application of this function.</small>\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.2.2\r\n * @category List\r\n * @sig Number -> Number -> [a] -> [a]\r\n * @param {Number} start The position to start removing elements\r\n * @param {Number} count The number of elements to remove\r\n * @param {Array} list The list to remove from\r\n * @return {Array} A new Array with `count` elements from `start` removed.\r\n * @see R.without\r\n * @example\r\n *\r\n *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\r\n */\r\n\r\nvar remove =\r\n/*#__PURE__*/\r\n_curry3(function remove(start, count, list) {\r\n  var result = Array.prototype.slice.call(list, 0);\r\n  result.splice(start, count);\r\n  return result;\r\n});\r\n\r\nexport default remove;"]},"metadata":{},"sourceType":"module"}